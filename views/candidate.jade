extends layout

block content
	div.row
		div.col-xs-12
			div.candidate-contact
				if (candidateInfo.Phone)
					span Phone: #{candidateInfo.Phone}
					br
				if (candidateInfo.Email)  
					span Email: #{candidateInfo.Email}
					br
				if (candidateInfo.Website)
					span 
						a(href="#{candidateInfo.Website}", target="_blank") Website 
				if (candidateInfo.Facebook)
					span | 
						a(href="#{candidateInfo.Facebook}", target="_blank") Facebook 
				if (candidateInfo.Twitter_Handle)
					span | 
						a(href="#{candidateInfo.Twitter_Handle}", target="_blank") Twitter
				//-
					if (candidateInfo.scorecard)
						br
						span  
							a(href="#{candidateInfo.scorecard}", target="_blank") Our Revolution Score Card
	div.candidate-tabs
		if (locals.hasFinancialCommittee.length > 0)
			ul.nav.nav-tabs
				li.active
					a(data-toggle="tab", href="#races") Races		
			//-	
				li
					a(data-toggle="tab", href="#contributions") Contributions
		else
			ul.nav.nav-tabs
				li.active
					a(data-toggle="tab", href="#races") Races
		if (locals.hasFinancialCommittee.length> 0)			
			div.row
				div.tab-content
					div#races.tab-pane.fade.in.active		
						- if(locals.mayorRaceInfo.length > 0)
						each race, i in mayorRaceInfo
							div.col-xs-12.col-sm-6.col-md-4.zeropad
								div.race-panel
									p.title #{mayorRaceInfo[i].City} 
										span.title #{mayorRaceInfo[i].Seat}
									p.date #{mayorRaceInfo[i].Date}
									if(mayorRaceInfo[i].FPTP_Votes_Total)
										span Total Votes:
										span #{mayorRaceInfo[i].FPTP_Votes_Total}
										br
										span Percentage of Popular Vote: 
										span.number #{mayorRaceInfo[i].FPTP_Votes_Percentage}
									else
										span Total First Place Votes: 
										span.number #{mayorRaceInfo[i].RC_First_Place_Votes_Total}
										br
										span Percentage First Place Vote:  
										span.number #{mayorRaceInfo[i].RC_First_Place_Votes_Percentage}
										br
										span Total Second Place Votes: 
										span.number #{mayorRaceInfo[i].RC_Second_Place_Votes_Total}
										br
										span Percentage Second Place Vote:  
										span.number #{mayorRaceInfo[i].RC_Second_Place_Votes_Percentage}
										br
										span Total Third Place Votes: 
										span.number #{mayorRaceInfo[i].RC_Third_Place_Votes_Total}
										br
										span Percentage Third Place Vote: 
										span.number #{mayorRaceInfo[i].RC_Third_Place_Votes_Percentage}								
						- if(locals.wardRaceInfo.length > 0)
						each race, i in wardRaceInfo
							div.col-xs-12.col-sm-6.col-md-4.zeropad
								div.race-panel
									p.title #{wardRaceInfo[i].City} 
										span.title #{wardRaceInfo[i].Seat} 
										span.title #{wardRaceInfo[i].Ward_Name}
									p.date #{wardRaceInfo[i].Date}

									if(wardRaceInfo[i].FPTP_Votes_Total)
										span Total Votes: 
										span.number #{wardRaceInfo[i].FPTP_Votes_Total}
										br
										span Percentage of Popular Vote: 
										span.number #{wardRaceInfo[i].FPTP_Votes_Percentage}
									else
										span Total First Place Votes: 
										span.number #{wardRaceInfo[i].RC_First_Place_Votes_Total}
										br
										span Percentage First Place Vote: 
										span.number #{wardRaceInfo[i].RC_First_Place_Votes_Percentage}
										br
										span Total Second Place Votes: 
										span.number #{wardRaceInfo[i].RC_Second_Place_Votes_Total}
										br
										span Percentage Second Place Vote:  
										span.number #{wardRaceInfo[i].RC_Second_Place_Votes_Percentage}
										br
										span Total Third Place Votes: 
										span.number #{wardRaceInfo[i].RC_Third_Place_Votes_Total}
										br
										span Percentage Third Place Vote:   
										span.number #{wardRaceInfo[i].RC_Third_Place_Votes_Percentage}		
				//-					
					div#contributions.tab-pane.fade
						div.row
							div.col-xs-12
								div.committee-container
									h3#committee-name
									span Registered Date:  
									span#regDate
									br
									span.marg10 Termination Date: 
									span#closedDate
									br
									span
									div.row
										div.col-xs-12
											div.panel-group
												div.panel.panel-default
													div.panel-heading
														h4.panel-title
															a#timelineLink(href="#timeline" data-toggle="collapse") Timeline
																span.glyphicon.glyphicon-chevron-right
													div#timeline.panel-collapse.collapse
														div.panel-body
															div.row
																div.col-xs-12
																	div#timeline-panel
															
									div.row
										div.col-xs-12
											div.panel-group
												div.panel.panel-default
													div.panel-heading
														h4.panel-title
															a#sectorsLink(href="#sectors" data-toggle="collapse") Sectors
																span.glyphicon.glyphicon-chevron-right
													div#sectors.panel-collapse.collapse
														div.panel-body
															div.row
																div.col-xs-2
																	div#sectorsFilter
																			label(for='sYearStart') From
																			select.form-control#sYearStart
																			label(for='sYearEnd') To
																			select.form-control#sYearEnd						
															
																div.col-xs-10
																	div#sectors-pie
															//-
																div.row
																	div.col-xs-12
																		div#sectors-bar

									div.row
										div.col-xs-12
											div.panel-group
												div.panel.panel-default
													div.panel-heading
														h4.panel-title
															a#scaleLink(href="#scale" data-toggle="collapse") Scale
																span.glyphicon.glyphicon-chevron-right
													div#scale.panel-collapse.collapse
														div.panel-body
															div.row
																div.col-xs-2
																	div#scaleFilter
																		label(for='sYearStartScale') From
																		select.form-control#sYearStartScale
																		label(for='sYearEndScale') To
																		select.form-control#sYearEndScale
																div.col-xs-5
																	div#scale-type
																div.col-xs-5
																	div#scale-location
									div.row
										div.col-xs-12
											div.panel-group
												div.panel.panel-default
													div.panel-heading
														h4.panel-title
															a#donorsLink(href="#donors" data-toggle="collapse") Donor Info
																span.glyphicon.glyphicon-chevron-right
													div#donors.panel-collapse.collapse
														div.panel-body
															div#donors-panel


			div.row
				a.goBack(href="/") Back to Map

		else
			div.row
				div.tab-content
					div#races.tab-pane.fade.in.active		
						- if(locals.mayorRaceInfo.length > 0)
						each race, i in mayorRaceInfo
							div.col-xs-12.col-sm-6.col-md-4.zeropad
								div.race-panel
									p.title #{mayorRaceInfo[i].City} 
										span.title #{mayorRaceInfo[i].Seat}
									p.date #{mayorRaceInfo[i].Date}
									if(mayorRaceInfo[i].FPTP_Votes_Total)
										span Total Votes:
										span.number #{mayorRaceInfo[i].FPTP_Votes_Total}
										br
										span Percentage of Popular Vote: 
										span.number #{mayorRaceInfo[i].FPTP_Votes_Percentage}
									else
										span Total First Place Votes: 
										span.number #{mayorRaceInfo[i].RC_First_Place_Votes_Total}
										br
										span Percentage First Place Vote:  
										span.number #{mayorRaceInfo[i].RC_First_Place_Votes_Percentage}
										br
										span Total Second Place Votes: 
										span.number #{mayorRaceInfo[i].RC_Second_Place_Votes_Total}
										br
										span Percentage Second Place Vote:  
										span.number #{mayorRaceInfo[i].RC_Second_Place_Votes_Percentage}
										br
										span Total Third Place Votes: 
										span.number #{mayorRaceInfo[i].RC_Third_Place_Votes_Total}
										br
										span Percentage Third Place Vote: 
										span.number #{mayorRaceInfo[i].RC_Third_Place_Votes_Percentage}								
						- if(locals.wardRaceInfo.length > 0)
						each race, i in wardRaceInfo
							div.col-xs-12.col-sm-6.col-md-4.zeropad
								div.race-panel
									p.title #{wardRaceInfo[i].City} 
										span.title #{wardRaceInfo[i].Seat} 
										span.title #{wardRaceInfo[i].Ward_Name}
									p.date #{wardRaceInfo[i].Date}

									if(wardRaceInfo[i].FPTP_Votes_Total)
										span Total Votes: 
										span.number #{wardRaceInfo[i].FPTP_Votes_Total}
										br
										span Percentage of Popular Vote: 
										span.number #{wardRaceInfo[i].FPTP_Votes_Percentage}
									else
										span Total First Place Votes: 
										span.number #{wardRaceInfo[i].RC_First_Place_Votes_Total}
										br
										span Percentage First Place Vote: 
										span.number #{wardRaceInfo[i].RC_First_Place_Votes_Percentage}
										br
										span Total Second Place Votes: 
										span.number #{wardRaceInfo[i].RC_Second_Place_Votes_Total}
										br
										span Percentage Second Place Vote:  
										span.number #{wardRaceInfo[i].RC_Second_Place_Votes_Percentage}
										br
										span Total Third Place Votes: 
										span.number #{wardRaceInfo[i].RC_Third_Place_Votes_Total}
										br
										span Percentage Third Place Vote:   
										span.number #{wardRaceInfo[i].RC_Third_Place_Votes_Percentage}		

					div#contributions.tab-pane.fade
						div.row
							div.col-xs-12
								div.panel-group
									div.panel.panel-default
										div.panel-heading
											h4.panel-title
												a(href="#timeline" data-toggle="collapse") Timeline
										div#timeline
											div.panel-body
												h1 Did it work?


			div.row
				a.goBack(href="/") Back to Map
block script
	script(type='text/javascript').
		var pathName = window.location.pathname;	
		var committeeG;

		$(document).ready(function(){

			$('div#timeline').on("hide.bs.collapse",function(){
				$('a#timelineLink').html('Timeline <span class="glyphicon glyphicon-chevron-right"></span>');
			});

			$('div#timeline').on("show.bs.collapse",function(){
				$('a#timelineLink').html('Timeline <span class="glyphicon glyphicon-chevron-down"></span>');
				console.log(committeeG);
				createTimeline(committeeG);

			});

			$('div#sectors').on("hide.bs.collapse",function(){
				$('a#sectorsLink').html('Sectors <span class="glyphicon glyphicon-chevron-right"></span>');
				$('select#sYearStart option').eq(0).prop('selected', true);
				$('select#sYearEnd option').eq(0).prop('selected', true);
			});

			$('div#sectors').on("show.bs.collapse",function(){
				$('a#sectorsLink').html('Sectors <span class="glyphicon glyphicon-chevron-down"></span>');
				createSectorCharts(committeeG, '0/0/0000', '01/01/3000'); //default it to the full date range
			});

			$('div#scale').on("hide.bs.collapse",function(){
				$('a#scaleLink').html('Scale <span class="glyphicon glyphicon-chevron-right"></span>');
				$('select#sYearStartScale option').eq(0).prop('selected', true);
				$('select#sYearEndScale option').eq(0).prop('selected', true);
			});

			$('div#scale').on("show.bs.collapse",function(){
				$('a#scaleLink').html('Scale <span class="glyphicon glyphicon-chevron-down"></span>');
				createItemizedChart(committeeG, '0/0/0000', '01/01/3000');
				createLocationChart(committeeG, '0/0/0000', '01/01/3000');
			});

			$('div#donors').on("hide.bs.collapse",function(){
				$('a#donorsLink').html('Donors <span class="glyphicon glyphicon-chevron-right"></span>');
			});

			$('div#donors').on("show.bs.collapse",function(){
				$('a#donorsLink').html('Donors <span class="glyphicon glyphicon-chevron-down"></span>');
				createDonorTable(committeeG);
			});



			$.getJSON("/candidate/getCandidateContributions/" + pathName.split('/')[2], function(data){				
					if(!data){
						console.log("no data");
					} else {
						globalData = data;
						//if they have a committee, change the data
						if($('a[href="#contributions"]').length > 0){
							(data.contributions).forEach(function(committee){
								if(committee[0]){
									//createCommitteeRow(committee);
									committeeG = committee;
									$('div.committee-container h3').html((committee[0]).Committee_Name)
									$('div.committee-container span#regDate').html((committee[0]).Registration_Date)

									if((committee[0]).Termination_Date){
										$('div.committee-container span#closedDate').html((committee[0]).Termination_Date)
									} else{
										$('div.committee-container span#closedDate').html('Still Active');

									}


									var previousContribution = 0;
									//populate drop down menus for the sectors and scale tabs
									(data.contributions[0]).forEach(function(contribution){
										if(contribution.Date !== previousContribution){
											$('select#sYearEndScale').append(new Option(contribution.Date, contribution.Date));
											$('select#sYearEnd').append(new Option(contribution.Date, contribution.Date));

											$('select#sYearStartScale').prepend(new Option(contribution.Date, contribution.Date));
											$('select#sYearStart').prepend(new Option(contribution.Date, contribution.Date));
											previousContribution=contribution.Date;
										}
									});
									//Set the default in YearStart to the first index
									$('select#sYearStart option').eq(0).prop('selected', true);
									$('select#sYearStartScale option').eq(0).prop('selected', true);


									//Termination_Date
									//add the click events for the filters here


									//make the table sortable here
									//conditional logic prevents re-instantiation
									/*if($.fn.dataTable.isDataTable('#donations')){
									}
									else{
										$('table#donations').DataTable({
										//default sort by most recent at the top
											"order": [[1, "desc"]],
											"bLengthChange": false,
											"searching": true
										});
									}*/
								}
							});	
						}

					}
			});
		});

		function createCommitteeRow(committee){

			if(!committee[0].Termination_Date){
				committee[0].Termination_Date = 'Still Active';
			}

			var row = '<div class="col-xs-12"><div class="committee-panel"><p class="committee-title">' + (committee[0]).Committee_Name;
			var timeLine = '<div class="row"><div class="col-xs-10 col-xs-offset-1"><div class="timelineContainer" id="timelineContainer ' + (committee[0]).idCommittee +'"></div></div></div>'
			var sectorPieChart = '<div class= "row"><div class="col-xs-10 col-xs-offset-1"><div class="sectorPieChartContainer" id="sectorPieChartContainer ' + (committee[0]).idCommittee +'"></div></div></div>';
			var sectorBarChart = '<div class="row"><div class="col-xs-10 col-xs-offset-1"><div class="sectorBarChartContainer" id="sectorBarChartContainer ' + (committee[0]).idCommittee +'"></div></div></div>'
			var itemizedChart = '<div class="row"><div class="col-xs-5"><div class="itemizedChart" id="itemizedChartContainer ' + (committee[0]).idCommittee  + '"></div></div>'
			var locationChart = '<div class="col-xs-7"><div class="locationChart" id="locationChartContainer ' + (committee[0]).idCommittee  + '"></div></div></div></div>'
			var row = row + timeLine + sectorPieChart + sectorBarChart + itemizedChart + locationChart;
			createDonorTable(committee, row);
		}

		function createTimeline(committee){
			console.log(committee[0].idCommittee);
			$.getJSON("/candidate/getCommitteeTimeline/" + (committee[0]).idCommittee, function(data){
				if(!data){
					console.log('error getting data');
				} else {
				console.log(data);
					var dataArray = [];
					//create the data points for the chart
					//add the data
					(data.timeline).forEach(function(timeline){
						var year = timeline.Year;
						var month = timeline.Month_Num;
						var day = 1;
						var point = {y: timeline.Amount, x: new Date(year, month, day)}
						//dynamically add the data point
						dataArray.push(point)
					});

				//create the area chart
					 var areaChart = new CanvasJS.Chart("timeline-panel", 
					 //var areaChart = new CanvasJS.Chart("timelineContainer " + (committee[0]).idCommittee,
						{
							title: {
								text: "Itemized Contribution Analysis",
								fontSize: 25,
								horizontalAlign: "center"
							},
							//animationEnabled: true,
							axisX: {
								interval: 3
							},
							axisY: {
								title: "Dollars Donated per Month",
								fontSize: 10
							},
							data: [
								{
									type: "area",
									//legendText: "{label}",
									color: "rgba(40,175,101,0.6)",
									labelWrap: false,
									dataPoints: dataArray 
								}
							]
						});
						
						//setTimeout(function(){
							areaChart.render();
						//}, 1500);
						
				}

			});
		}

		var sectorData;
		function createSectorCharts(committee, dateStart, dateEnd){
			//if(!dateStart || !dateEnd){
				var startMonth = dateStart.split('/')[0];
				var startDay = dateStart.split('/')[1];
				var startYear = dateStart.split('/')[2];
				var endMonth = dateEnd.split('/')[0];
				var endDay = dateEnd.split('/')[1];
				var endYear = dateEnd.split('/')[2];



				$.getJSON("/candidate/getSectorInformation/" + (committee[0]).idCommittee + "/" + startMonth + "/" + startDay + "/" + startYear + "/" + endMonth + "/" + endDay + "/" + endYear, function(data){
					sectorData = data;
					if(!data){
						console.log('error getting data');
					} else {

						if((data.sector[0]).length < 1){
							$('div#sectors-pie').html('<p class="no-data">No Data Available for Sector Donations</p>')
						} else {
							$('div#sectors-pie').empty();
							var dataArray = [];
							var barDataArray =[];
							//create the data points for the chart
							//add the data
							(data.sector[0]).forEach(function(sector){
								//var point = {y: sector.Total}
								var point = {y: sector.Total, label: sector.Sector}
								//dynamically add the data point
								dataArray.push(point)

								var barPoint = {x: sector.Total, label: sector.Sector}
								barDataArray.push(barPoint);
							});

							//create the base pie chart
							 var pieChart = new CanvasJS.Chart("sectors-pie",
							 //var pieChart = new CanvasJS.Chart("sectorPieChartContainer " + (committee[0]).idCommittee,
								{
									title: {
										text: "Percent of Total Donations by Sector",
										fontSize: 25,
										horizontalAlign: "left"
									},
									//animationEnabled: true,
									legend: {
										//maxWidth: 650,
										//itemWidth: 400
									},
									data: [
										{
											type: "pie",
											//showInLegend: true,
											//legendText: "{label}",
											indexLabelFontSize: 15,
											dataPoints: dataArray /*[
												{ y: 4181563, indexLabel: "PlayStation 3" },
												{ y: 2175498, indexLabel: "Wii" },
												{ y: 3125844, indexLabel: "Xbox 360" },
												{ y: 1176121, indexLabel: "Nintendo DS"},
												{ y: 1727161, indexLabel: "PSP" },
												{ y: 4303364, indexLabel: "Nintendo 3DS"},
												{ y: 1717786, indexLabel: "PS Vita"}
											]*/
										}
									]
								});
							 	
							 /*	var barChart = new CanvasJS.Chart("sectors-bar", */
							 	//var barChart = new CanvasJS.Chart("sectorBarChartContainer " + (committee[0]).idCommittee,
							/*	{
									title:{
										text: "Total Donations by Sector",
										fontSize: 25,
										horizontalAlign: "left"				

									},
									animationEnabled: true,
									axisX:{
										interval: 1,
										gridThickness: 0,
										labelFontSize: 10,
										labelFontStyle: "normal",
										labelFontWeight: "normal",
										labelFontFamily: "Lucida Sans Unicode"

									},
									axisY2:{
										interlacedColor: "rgba(1,77,101,.2)",
										gridColor: "rgba(1,77,101,.1)",
										labelFontSize: 10

									},

									data: [
									{     
										type: "bar",
						                name: "companies",
										axisYType: "secondary",
										color: "#014D65",				
										dataPoints: dataArray
									}
									
									]
								});	*/					



							//setTimeout(function(){
							pieChart.render();
							//barChart.render();
							//}, 2000);
						}
					}
				});
			//}
		}

		function createItemizedChart(committee, dateStart, dateEnd){
			var startMonth = dateStart.split('/')[0];
			var startDay = dateStart.split('/')[1];
			var startYear = dateStart.split('/')[2];
			var endMonth = dateEnd.split('/')[0];
			var endDay = dateEnd.split('/')[1];
			var endYear = dateEnd.split('/')[2];
			
			$.getJSON("/candidate/getCandidateItemizedContributions/" + (committee[0]).idCommittee + "/" + startMonth + "/" + startDay + "/" + startYear + "/" + endMonth + "/" + endDay + "/" + endYear , function(data){
				if(!data){
					console.log('error getting data');
				} else {

					if((!(data.itemized)[0][0].Sum_Item)){
						$('div#scale-type').html('<p class="no-data">No Data Available for Contribution Types</p>');
					} else {
						$('div#scale-type').empty();
						//create the base pie chart
						 var pieChart = new CanvasJS.Chart("scale-type",
							{
								title: {
									text: "Contribution Types",
									fontSize: 23,
									horizontalAlign: "center"
								},
								legend: {
									//maxWidth: 650,
									//itemWidth: 400
								},
								data: [
									{
										type: "pie",
										//showInLegend: true,
										//legendText: "{label}",
										indexLabel: "{label}",
										indexLabelFontSize: 15,									
										dataPoints: [
											{y: (data.itemized)[0][0].Sum_Item, label: 'Itemized'},
											{y: (data.itemized)[0][0].Sum_Non, label: 'Non-Itemized'}

										] 
									}
								]
							});

						//setTimeout(function(){
						pieChart.render();
						//}, 2000);						
						}
					}
			});		
		}

		function createLocationChart(committee, dateStart, dateEnd){
				var startMonth = dateStart.split('/')[0];
				var startDay = dateStart.split('/')[1];
				var startYear = dateStart.split('/')[2];
				var endMonth = dateEnd.split('/')[0];
				var endDay = dateEnd.split('/')[1];
				var endYear = dateEnd.split('/')[2];

			$.getJSON("/candidate/getCandidateLocationContributions/" + (committee[0]).idCommittee + "/" + startMonth + "/" + startDay + "/" + startYear + "/" + endMonth + "/" + endDay + "/" + endYear, function(data){
				if(!data){
					console.log('error getting data');
				} else {

					if(data.locations[0].length < 1){
						$('div#scale-location').html('<p class="no-data">No Data Available for Contribution Locations</p>');
					} else {
						$('div#scale-location').empty();
						console.log(data);
						var dataArray = [];
						//create the data points for the chart
						(data.locations[0]).forEach(function(location){
							//var point = {y: sector.Total}
							if(location.State === 'MN'){
							var point = {y: location.Total, label: location.City}
							} else {
								var point = {y: location.Total, label: location.City + ', ' + location.State}

							}
							//dynamically add the data point
							dataArray.push(point)
						});

						
						//create the base pie chart
						 var pieChart = new CanvasJS.Chart("scale-location",
							{
								title: {
									text: "Itemized Contributor Cities",
									fontSize: 23,
									horizontalAlign: "center"
								},
								legend: {
									//maxWidth: 650,
									//itemWidth: 400
								},
								data: [
									{
										type: "pie",
										//showInLegend: true,
										//legendText: "{label}",
										indexLabel: "{label}",
										dataPoints: dataArray,
										indexLabelFontSize: 8

										 
									}
								]
							});

						//setTimeout(function(){
						pieChart.render();
						//}, 2000);						
					}
				}
			});		
		}


		function createDonorTable(committee){
			var addition = '<table id="donations" class="table table-striped"><thead><tr><th>Date</th><th>First</th><th>Last</th><th>Employer</th><th>Sector</th><th>Donation</th></tr></thead><tbody>';

			committee.forEach(function(donation){

				var donationRow = '<tr><td class="donationDate">' + donation.Date+ '</td><td>' + donation.First + '</td><td>' + donation.Last + '</td><td class="donationEmployer">' + donation.Employer + '</td><td>' + donation.Sector +'</td><td>' + donation.Money_Received_This_Period + '</td></tr>';
				addition = addition + donationRow;
			});

			addition = addition + '</tbody></table>';


			

			//add the html to your row
			$('div#donors-panel').html(addition);


			//make it a data table
			if($.fn.dataTable.isDataTable('#donations')){
			}
			else{
				$('table#donations').DataTable({
				//default sort by most recent at the top
				"order": [[0, "desc"]],
				"bLengthChange": false,
				"searching": true
				});
			}
			//closeCommitteeRow(committee, row);
		}


		function closeCommitteeRow(committee, row){
			var addition = '<div class="col-xs-12"><div class="committee-info"><span>Registration Date: </span><span>' + (committee[0]).Registration_Date+ '</span><span>	Termination Date: </span><span>' + (committee[0]).Termination_Date+ '</span></div></div></div></div></div>'
			row = row + addition;
			$('#contributions').append(row);


			createSectorCharts(committee);
			createTimeline(committee)
			createItemizedChart(committee);
			createLocationChart(committee);

		}


		//bind events
		$('select#sYearEnd').change(function(){
			var dateStart = $('select#sYearStart option:selected').val();
			var dateEnd = $('select#sYearEnd option:selected').val();
			createSectorCharts(committeeG, dateStart, dateEnd);
		})
		$('select#sYearStart').change(function(){
			var dateStart = $('select#sYearStart option:selected').val();
			var dateEnd = $('select#sYearEnd option:selected').val();
			createSectorCharts(committeeG, dateStart, dateEnd);
		})
		$('select#sYearEndScale').change(function(){
			var dateStart = $('select#sYearStartScale option:selected').val();
			var dateEnd = $('select#sYearEndScale option:selected').val();
			createItemizedChart(committeeG, dateStart, dateEnd);
			createLocationChart(committeeG, dateStart, dateEnd);
		})
		$('select#sYearStartScale').change(function(){
			var dateStart = $('select#sYearStartScale option:selected').val();
			var dateEnd = $('select#sYearEndScale option:selected').val();
			createItemizedChart(committeeG, dateStart, dateEnd);
			createLocationChart(committeeG, dateStart, dateEnd);
		})


